---
common-steps:
  - &installdeps
    run:
      name: Install Debian packaging dependencies
      command: make install-deps

  - &fetchwheels
    run:
      name: Download wheels and sources
      command: make fetch-wheels

  - &getlatestreleasedversion
    run:
      name: Get latest released version of the project
      command: |
        cd ~/packaging/securedrop-*
        export VERSION_TO_BUILD="$(git describe --tags $(git rev-list --tags --max-count=1))"
        # Enable access to this env var in subsequent run steps
        echo $VERSION_TO_BUILD > ~/packaging/sd_version
        echo 'export VERSION_TO_BUILD=$(cat ~/packaging/sd_version)' >> $BASH_ENV

  - &getnightlyversion
    run:
      name: Create nightly version
      command: |
        cd ~/packaging/securedrop-*
        # Nightly versioning format is: LATEST_TAG-dev-YYMMDD-HHMMSS
        export VERSION_TO_BUILD="$(git describe --tags $(git rev-list --tags --max-count=1))-dev-$(date +%Y%m%d)-$(date +%H%M%S)"
        # Enable access to this env var in subsequent run steps
        echo $VERSION_TO_BUILD > ~/packaging/sd_version
        echo 'export VERSION_TO_BUILD=$(cat ~/packaging/sd_version)' >> $BASH_ENV
        ./update_version.sh $VERSION_TO_BUILD
        git tag $VERSION_TO_BUILD

  - &makesourcetarball
    run:
      name: Create source tarball
      command: |
        cd ~/packaging/securedrop-*
        git checkout $VERSION_TO_BUILD
        python3 setup.py sdist

  - &clonesecuredropclient
    run:
      name: Clone the repository to be packaged
      command: |
        mkdir ~/packaging && cd ~/packaging
        git clone https://github.com/freedomofpress/securedrop-client.git
        export PKG_NAME="securedrop-client"
        # Enable access to this env var in subsequent run steps
        echo $PKG_NAME > ~/packaging/sd_package_name
        echo 'export PKG_NAME=$(cat ~/packaging/sd_package_name)' >> $BASH_ENV

  - &clonesecuredropproxy
    run:
      name: Clone the repository to be packaged
      command: |
        mkdir ~/packaging && cd ~/packaging
        git clone https://github.com/freedomofpress/securedrop-proxy.git
        export PKG_NAME="securedrop-proxy"
        # Enable access to this env var in subsequent run steps
        echo $PKG_NAME > ~/packaging/sd_package_name
        echo 'export PKG_NAME=$(cat ~/packaging/sd_package_name)' >> $BASH_ENV

  - &clonesecuredropexport
    run:
      name: Clone the repository to be packaged
      command: |
        mkdir ~/packaging && cd ~/packaging
        git clone https://github.com/freedomofpress/securedrop-export.git
        export PKG_NAME="securedrop-export"
        # Enable access to this env car in subsequent run steps
        echo $PKG_NAME > ~/packaging/sd_package_name
        echo 'export PKG_NAME=$(cat ~/packaging/sd_package_name)' >> $BASH_ENV

  - &updatedebianchangelog
    run:
      name: Update debian changelog
      command: |
        cd ~/project/$PKG_NAME
        export DEBFULLNAME='Automated builds'
        export DEBEMAIL=securedrop@freedom.press
        dch --distribution unstable --package "$PKG_NAME" --newversion $VERSION_TO_BUILD "This is an automated build."

  - &builddebianpackage
    run:
      name: Build debian package
      command: |
        export PKG_PATH=~/packaging/$PKG_NAME/dist/$PKG_NAME-$VERSION_TO_BUILD.tar.gz
        export PKG_VERSION=$VERSION_TO_BUILD
        make $PKG_NAME
        ls ~/debbuild/packaging/*.deb

  - &installgitlfs
    run:
      name: Install Git LFS.
      command: |
        export GIT_LFS_VERSION=2.7.2
        export GIT_LFS_CHECKSUM=89f5aa2c29800bbb71f5d4550edd69c5f83e3ee9e30f770446436dd7f4ef1d4c
        wget https://github.com/git-lfs/git-lfs/releases/download/v$GIT_LFS_VERSION/git-lfs-linux-amd64-v$GIT_LFS_VERSION.tar.gz
        sha256sum git-lfs-linux-amd64-v$GIT_LFS_VERSION.tar.gz | grep $GIT_LFS_CHECKSUM
        tar xzf git-lfs-linux-amd64-v$GIT_LFS_VERSION.tar.gz
        sudo mv git-lfs /usr/local/bin/git-lfs
        git lfs install

  - &addsshkeys
    add_ssh_keys:
      fingerprints:
        - "e5:b5:6e:d0:4e:ce:52:40:33:30:5e:6f:c5:73:38:20"

  - &commitworkstationdebs
    run:
      name: Commit workstation debs for deployment to apt-test-qubes.freedom.press
      command: |
        git clone git@github.com:freedomofpress/securedrop-dev-packages-lfs.git
        cd securedrop-dev-packages-lfs

        git config user.email "securedrop@freedom.press"
        git config user.name "sdcibot"

        # Copy built debian packages to the relevant workstation repo and git push.
        cp ~/debbuild/packaging/*.deb ./workstation/stretch/
        git add workstation/stretch/*.deb
        git commit -m "Automated SecureDrop workstation build"
        git push origin master

version: 2.1
jobs:
  build-securedrop-client:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropclient
      - *getlatestreleasedversion
      - *makesourcetarball
      - *builddebianpackage

  build-securedrop-client-buster:
    docker:
      - image: circleci/python:3.7-buster
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropclient
      - *getlatestreleasedversion
      - *makesourcetarball
      - *builddebianpackage

  build-nightly-securedrop-client:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropclient
      - *getnightlyversion
      - *makesourcetarball
      - *updatedebianchangelog
      - *builddebianpackage
      - *installgitlfs
      - *addsshkeys
      - *commitworkstationdebs

  build-securedrop-proxy:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropproxy
      - *getlatestreleasedversion
      - *makesourcetarball
      - *builddebianpackage

  build-nightly-securedrop-proxy:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropproxy
      - *getnightlyversion
      - *makesourcetarball
      - *updatedebianchangelog
      - *builddebianpackage
      - *installgitlfs
      - *addsshkeys
      - *commitworkstationdebs

  build-securedrop-export:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropexport
      - *getlatestreleasedversion
      - *makesourcetarball
      - *builddebianpackage

  build-nightly-securedrop-export:
    docker:
      - image: circleci/python:3.5-stretch
    steps:
      - checkout
      - *installdeps
      - *fetchwheels
      - *clonesecuredropexport
      - *getnightlyversion
      - *makesourcetarball
      - *updatedebianchangelog
      - *builddebianpackage
      - *installgitlfs
      - *addsshkeys
      - *commitworkstationdebs

workflows:
  build-debian-packages:
    jobs:
      - build-securedrop-client
      - build-securedrop-client-buster
      - build-securedrop-proxy
      - build-securedrop-export

  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-nightly-securedrop-proxy
      - build-nightly-securedrop-client:
          requires:
             - build-nightly-securedrop-proxy
      - build-nightly-securedrop-export:
          requires:
             - build-nightly-securedrop-proxy
             - build-nightly-securedrop-client
